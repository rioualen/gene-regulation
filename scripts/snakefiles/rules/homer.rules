# Set parameters
if not "qsub" in config.keys():
    sys.exit("The parameter qsub must be defined in the config file")

if not "fasta_file" in config["genome"].keys():
    sys.exit("Fasta file must be defined in the config file")

if not "genome" in config["dir"].keys():
    sys.exit("Genome dir must be defined in the dir section of the config file")

if not "size" in config["genome"].keys():
    sys.exit("The parameter genome size must be defined in the config file")

if not "homer" in config.keys():
    config["homer"] = {}

if not "style" in config["homer"].keys():
    config["homer"]["style"] = "factor"

if not "L" in config["homer"].keys():
    config["homer"]["L"] = "4"

if not "F" in config["homer"].keys():
    config["homer"]["F"] = "4"

if not "P" in config["homer"].keys():
    config["homer"]["P"] = "0.0001"

if not "fdr" in config["homer"].keys():
    config["homer"]["fdr"] = "0.001"

if not "frag_length" in config["homer"].keys():
    config["homer"]["frag_length"] = "auto"

if not "samples" in config["dir"].keys():
    sys.exit("The sample dir must be defined in the config file")

if not "peaks" in config["dir"].keys():
    sys.exit("The peaks dir must be defined in the config file")

dir_samples = config["dir"]["samples"]
dir_homer = os.path.join(config["dir"]["peaks"], "{treatment}_vs_{control}/homer")

# Rule
rule homer:
    """Peak-calling with HOMER software, findPeaks algorithm (!).
    Input formats: .sam, .bam, .bed (bam input requires samtools to be installed)

    The genome parameter can be either:
        - the code of a genome installed in Homer (eg HG18, dm3...)
        - a fasta file (see http://homer.salk.edu/homer-fdr{fdr}_peaks/introduction/update.html)          TO be changed

    Required parameters:
        config["dir"]["samples"]
        config["dir"]["peaks"]
        config["genome"]["fasta_file"]
        config["genome"]["size"]

    Optional parameters:
        config["homer"]["style"]
        config["homer"]["L"]
        config["homer"]["F"]
        config["homer"]["P"]
        config["homer"]["fdr"]

    Copyright Claire Rioualen
    """
    input:
        treatment = dir_samples + "/{treatment}/{treatment}{preprocess,.*}_sorted_pos.bed",
        control = dir_samples + "/{control}/{control}{preprocess,.*}_sorted_pos.bed"
    output: peaks_bed = dir_homer + "/{treatment}_vs_{control}{preprocess,.*}_homer.bed"
    params:    # name="{treatment}_vs_{control}_homer",
        treatment_tag = dir_homer + "/{treatment}_tag",
        control_tag = dir_homer + "/{control}_tag",
        genome = os.path.join(config["dir"]["genome"], config["genome"]["fasta_file"]),
        style = config["homer"]["style"],
        L = config["homer"]["L"],
        P = config["homer"]["P"],
        F = config["homer"]["F"],
        fdr = config["homer"]["fdr"],
        frag_length = config["homer"]["frag_length"],
        genome_size = config["genome"]["size"],
        qsub = config["qsub"] \
          + " -e " + dir_homer + "/{treatment}_vs_{control}{preprocess,.*}_homer_qsub.err" \
          + " -o " + dir_homer + "/{treatment}_vs_{control}{preprocess,.*}_homer_qsub.out"
    log: dir_homer + "/{treatment}_vs_{control}{preprocess,.*}_homer.log"
    benchmark: dir_homer + "/{treatment}_vs_{control}{preprocess,.*}_homer_benchmark.txt"
    shell:"""
(makeTagDirectory {params.treatment_tag} -genome {params.genome} -checkGC {input.treatment} -format bed
makeTagDirectory {params.control_tag} -genome {params.genome} -checkGC {input.control} -format bed
findPeaks {params.treatment_tag} -style {params.style} -L {params.L} -P {params.P} -F {params.F} -fdr {params.fdr} -gsize {params.genome_size} -fragLength {params.frag_length} -o {params.treatment_tag}/peaks.txt -i {params.control_tag}
pos2bed.pl {params.treatment_tag}/peaks.txt > {output}
makeUCSCfile {params.treatment_tag} -o auto
makeUCSCfile {params.control_tag} -o auto) &> {log}
"""

